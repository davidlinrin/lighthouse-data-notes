{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create an API calculator which takes two numbers as an argument\n",
    "#Create endpoints for add, subtract, multiply, and divide\n",
    "#Deploy it into the cloud!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from flask import Flask, jsonify\n",
    "from flask_restful import Resource, Api, reqparse\n",
    "app = Flask(__name__)\n",
    "api = Api(app)\n",
    "\n",
    "class add(Resource):\n",
    "    def get(self):\n",
    "            # create request parser\n",
    "        parser = reqparse.RequestParser()\n",
    "            # create argument 'num_1'\n",
    "        parser.add_argument('num_1', type=int)\n",
    "            # parse 'num_1'\n",
    "        num_1 = parser.parse_args().get('num_1')\n",
    "        parser2 = reqparse.RequestParser()\n",
    "            # create argument 'num_2'\n",
    "        parser2.add_argument('num_2', type=int)\n",
    "            # parse 'name'\n",
    "        num_2 = parser2.parse_args().get('num_2')   \n",
    "        if num_2 & num_1:\n",
    "            calculation = f'Here is the sum: {num_1+num_2}!'\n",
    "        else:\n",
    "            calculation = 'you need to input two numbers for parameters num_1 and num_2!'\n",
    "            # make json from greeting string \n",
    "        return jsonify(beepbeep_boop=calculation)  \n",
    "    \n",
    "class subtract(Resource):\n",
    "    def get(self):\n",
    "        # create request parser\n",
    "        parser = reqparse.RequestParser()\n",
    "            # create argument 'num_1'\n",
    "        parser.add_argument('num_1', type=int)\n",
    "            # parse 'num_1'\n",
    "        num_1 = parser.parse_args().get('num_1')\n",
    "        parser2 = reqparse.RequestParser()\n",
    "            # create argument 'num_2'\n",
    "        parser2.add_argument('num_2', type=int)\n",
    "            # parse 'name'\n",
    "        num_2 = parser2.parse_args().get('num_2')   \n",
    "        if num_2 & num_1:\n",
    "            calculation = f'Subtraction of num_1-num_2: {num_1-num_2}!'\n",
    "        else:\n",
    "            calculation = 'you need to input two numbers for parameters num_1 and num_2!'\n",
    "        # make json from greeting string \n",
    "        return jsonify(beepbeep_boop=calculation)  \n",
    "    \n",
    "class multiply(Resource):\n",
    "    def get(self):\n",
    "            # create request parser\n",
    "        parser = reqparse.RequestParser()\n",
    "            # create argument 'num_1'\n",
    "        parser.add_argument('num_1', type=int)\n",
    "            # parse 'num_1'\n",
    "        num_1 = parser.parse_args().get('num_1')\n",
    "        parser2 = reqparse.RequestParser()\n",
    "            # create argument 'num_2'\n",
    "        parser2.add_argument('num_2', type=int)\n",
    "            # parse 'name'\n",
    "        num_2 = parser2.parse_args().get('num_2')   \n",
    "        if num_2 & num_1:\n",
    "            calculation = f'Multiplication of numbers is: {num_1*num_2}!'\n",
    "        else:\n",
    "            calculation = 'you need to input two numbers for parameters num_1 and num_2!'\n",
    "            # make json from greeting string \n",
    "        return jsonify(beepbeep_boop=calculation)\n",
    "    \n",
    "class divide(Resource):\n",
    "    def get(self):\n",
    "            # create request parser\n",
    "        parser = reqparse.RequestParser()\n",
    "            # create argument 'num_1'\n",
    "        parser.add_argument('num_1', type=int)\n",
    "            # parse 'num_1'\n",
    "        num_1 = parser.parse_args().get('num_1')\n",
    "        parser2 = reqparse.RequestParser()\n",
    "            # create argument 'num_2'\n",
    "        parser2.add_argument('num_2', type=int)\n",
    "            # parse 'name'\n",
    "        num_2 = parser2.parse_args().get('num_2')   \n",
    "        if num_2 & num_1:\n",
    "            calculation = f'Division of numbers is: {num_1/num_2}!'\n",
    "        else:\n",
    "            calculation = 'you need to input two numbers for parameters num_1 and num_2!'\n",
    "            # make json from greeting string \n",
    "        return jsonify(beepbeep_boop=calculation)  \n",
    "    \n",
    "#assign endpoint\n",
    "# api.add_resource(calc, '/calc',)\n",
    "api.add_resource(add, '/add',)    \n",
    "api.add_resource(subtract, '/subtract',)    \n",
    "api.add_resource(multiply, '/multiply',)   \n",
    "api.add_resource(divide, '/divide',) "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
